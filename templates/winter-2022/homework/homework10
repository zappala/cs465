<!DOCTYPE html>
<html lang="en">
  <head>
    <title>CS 465 Computer Security</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8"/>
<link rel="shortcut icon" href="/static/img/favicon.ico">
<link href="https://fonts.googleapis.com/css?family=Lora:700|Work+Sans:400,700" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link href="/static/css/app.css" rel="stylesheet">
  </head>
  <body>
    <div class="container-fluid header">
      <div class="row">
	<div class="col-md-7 brand">
	  <a href="/">CS 465 Computer Security</a>
	</div>
	<div class="col-md-5 affiliation">
	  <a href="https://www.byu.edu">BYU</a> | <a
	  href="https://cs.byu.edu">Computer Science</a>
	</div>
	</div>
	<div class="row">
	<div class="col-sm">
	  <h1>
Winter 2022
</h1>
	  <h4>
Section 1: MWF, 11:00am - 11:50am, TMCB 120
</h4>
	</div>
	</div>
	</div>

    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <div class="container-fluid">
  <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
	<span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarSupportedContent">
	<ul class="navbar-nav mr-auto">
	  







<li class="nav-item ">
<a class="nav-link" href=/winter-2022/ >Syllabus</a>
</li>




<li class="nav-item ">
<a class="nav-link" href=/winter-2022/schedule >Schedule</a>
</li>




<li class="nav-item ">
<a class="nav-link" href=/winter-2022/lectures >Lecture Material</a>
</li>
<li class="nav-item dropdown">
  <a class="nav-link dropdown-toggle" href="/homework" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    Homework</a>
  <div class="dropdown-menu" aria-labelledby="navbarDropdown">
    



<a class="dropdown-item" href=/winter-2022/homework/homework1 >Homework #1</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework2 >Homework #2</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework3 >Homework #3</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework4 >Homework #4</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework5 >Homework #5</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework6 >Homework #6</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework7 >Homework #7</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework8 >Homework #8</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework9 >Homework #9</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework10 >Homework #10</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework11 >Homework #11</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework12 >Homework #12</a>
    



<a class="dropdown-item" href=/winter-2022/homework/homework13 >Homework #13</a>
</div>
</li>
<li class="nav-item dropdown">
  <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    Projects</a>
  <div class="dropdown-menu" aria-labelledby="navbarDropdown">
    



<a class="dropdown-item" href=/winter-2022/projects/project1 >Project #1: AES</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project2 >Project #2: Hash Attack</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project3 >Project #3: MAC Attack</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project4 >Project #4: Diffie-Hellman</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project5 >Project #5: RSA</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project6 >Project #6: TLS</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project7 >Project #7: Password Cracking</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project8 >Project #8: Extracting Secrets</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project9 >Project #9: Buffer Overflow</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project10 >Project #10: S/MIME and PGP</a>
    



<a class="dropdown-item" href=/winter-2022/projects/project11 >Project #11: CTF Extra Credit</a>
</div>
</li>
<li class="nav-item dropdown">
  <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
    Help</a>
  <div class="dropdown-menu" aria-labelledby="navbarDropdown">
    





<a class="dropdown-item" href=/winter-2022/help/instructor >Instructor and TAs</a>
    





<a class="dropdown-item" href=/winter-2022/help/officehours >Office Hours</a>
    





<a class="dropdown-item" href=/winter-2022/help/study-guide-midterm1 >Midterm 1 Study Guide</a>
    





<a class="dropdown-item" href=/winter-2022/help/study-guide-midterm2 >Midterm 2 Study Guide</a>
    





<a class="dropdown-item" href=/winter-2022/help/slack >Class Slack Channel</a>
    </div>
    </li>
</ul>


	</ul>
      </div>
    </div>
    </nav>

    <div id="page" class="white">
    <div class="container-fluid">
    <div class="row">
          <div class="col-sm">

	    

<h1>Homework #10</h1>
<p>This homework is intended to introduce you to the <code>gdb</code> debugger,
understand how to examine and update memory locations <code>gdb</code>, and gain
experience with how the runtime stack is organized.</p>
<p>In addition to the lecture material, you can watch this <a href="https://www.youtube.com/watch?v=RF7DF4kfs1E">introductory
video on buffer overflow
attacks</a>.</p>
<p>The file
<a href="http://faculty.cs.byu.edu/~seamons/examine_stack.c">examine_stack.c</a>
makes a series of function calls main → freshman → sophomore → junior
→ senior. Compile the program and run it in the debugger, breaking
somewhere in function senior. Print out all of the stack activation
frames, and label as many memory locations as you can.</p>
<p>Not all the stack locations will be labeled. Extra space may be
allocated on the stack that is set to uninitialized values that
already existing in memory. Be sure to label the following elements
for all four functions. You should be able to identify</p>
<ol>
<li>return addresses</li>
<li>saved frame pointers (ebp)</li>
<li>local variables</li>
<li>function arguments</li>
</ol>
<p>For example, if you had a function that looked like this:</p>
<p><img src="/static/img/func2.png" width=300></p>
<p>Then you might label things like this:</p>
<p><img src="/static/img/func1.png" width = 500></p>
<p>Use the “info frame” gdb command to compare the information you
labeled with what the debugger reports is in each stack frame. You may
print out a hard copy, write on it to label all the items, and turn in
a scan of the hard copy. You may also create your result
electronically. Make it easy for the TAs to grade.</p>
<p>Compile the program with the -m32 compiler option. We will use a
32-bit program for simplicity. You should also compile with -g to give
debugging info.</p>
<h2>Useful GDB Debugger Commands</h2>
<p>See <a href="https://darkdust.net/files/GDB%20Cheat%20Sheet.pdf">this cheat sheat</a>.</p>
<blockquote>
<p>// start debugger from the command line</p>
<p>gdb [executable name]</p>
<p>// list source code, hit [enter] to list more</p>
<p>(gdb) list 1</p>
<p>// set break point at line 10</p>
<p>(gdb) break 10</p>
<p>// start running program, enter parameters</p>
<p>(gdb) run [parameters]</p>
<p>// execute the next line of code and pause</p>
<p>(gdb) step</p>
<p>// display values of registers or variables</p>
<p>(gdb) print $esp</p>
<p>// examine a block (32 words) of memory in hex</p>
<p>(gdb) x /32xw [address]</p>
<p>// change the value of a memory address pointer</p>
<p>(gdb) set <em>(int </em>)[addr] = [val]</p>
<p>// see the assembly code stored in memory</p>
<p>(gdb) disassemble main</p>
</blockquote>
<h2>Submission</h2>
<p>Submit a PDF via Learning Suite.</p>


	    </div>
    </div>
    </div>
    </div>

    <div id="footer">
      <div class="row">
	<div id="license">
	</div>
      </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>    
<script type="text/x-mathjax-config">
  MathJax.Hub.Config({
    extensions: ["tex2jax.js"],
    jax: ["input/TeX", "output/HTML-CSS"],
    tex2jax: {
      inlineMath: [ ['$','$'], ["\\(","\\)"] ],
      displayMath: [ ['$$','$$'], ["\\[","\\]"] ],
      processEscapes: true
    },
    "HTML-CSS": { fonts: ["TeX"] }
  });
</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js" integrity="sha256-nvJJv9wWKEm88qvoQl9ekL2J+k/RWIsaSScxxlsrv8k=" crossorigin="anonymous"></script>
    <script>
  </body>
</html>